<?php

namespace ContainerTJJPQO2;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSecurity_Authentication_Listener_LightsamlSp_MainService extends AppKernelProdContainer
{
    /*
     * Gets the private 'security.authentication.listener.lightsaml_sp.main' shared service.
     *
     * @return \LightSaml\SpBundle\Security\Firewall\LightSamlSpListener
     */
    public static function do($container, $lazyLoad = true)
    {
        $a = ($container->privates['security.authentication.manager'] ?? $container->load('getSecurity_Authentication_ManagerService'));

        if (isset($container->privates['security.authentication.listener.lightsaml_sp.main'])) {
            return $container->privates['security.authentication.listener.lightsaml_sp.main'];
        }
        $b = ($container->services['router'] ?? $container->getRouterService());

        if (isset($container->privates['security.authentication.listener.lightsaml_sp.main'])) {
            return $container->privates['security.authentication.listener.lightsaml_sp.main'];
        }
        $c = ($container->services['event_dispatcher'] ?? $container->getEventDispatcherService());

        if (isset($container->privates['security.authentication.listener.lightsaml_sp.main'])) {
            return $container->privates['security.authentication.listener.lightsaml_sp.main'];
        }

        $container->privates['security.authentication.listener.lightsaml_sp.main'] = $instance = new \LightSaml\SpBundle\Security\Firewall\LightSamlSpListener(($container->services['.container.private.security.token_storage'] ?? $container->get_Container_Private_Security_TokenStorageService()), $a, ($container->privates['security.authentication.session_strategy'] ?? $container->load('getSecurity_Authentication_SessionStrategyService')), ($container->privates['security.http_utils'] ?? $container->load('getSecurity_HttpUtilsService')), 'main', new \Symfony\Component\Security\Http\Authentication\CustomAuthenticationSuccessHandler(new \Mautic\UserBundle\Security\Authentication\AuthenticationHandler($b), ['login_path' => $container->getEnv('MAUTIC_SAML_LOGIN_PATH'), 'always_use_default_target_path' => false, 'default_target_path' => '/', 'target_path_parameter' => '_target_path', 'use_referer' => false], 'main'), new \Symfony\Component\Security\Http\Authentication\CustomAuthenticationFailureHandler(new \Mautic\UserBundle\Security\Authentication\AuthenticationHandler($b), ['login_path' => $container->getEnv('MAUTIC_SAML_LOGIN_PATH'), 'failure_path' => NULL, 'failure_forward' => false, 'failure_path_parameter' => '_failure_path']), ['login_path' => $container->getEnv('MAUTIC_SAML_LOGIN_PATH'), 'check_path' => $container->getEnv('MAUTIC_SAML_LOGIN_CHECK_PATH'), 'use_forward' => false, 'require_previous_session' => false], ($container->privates['monolog.logger.security'] ?? $container->load('getMonolog_Logger_SecurityService')), $c);

        $instance->setProfile(($container->services['ligthsaml.profile.acs'] ?? $container->load('getLigthsaml_Profile_AcsService')));
        $instance->setRememberMeServices(($container->privates['security.authentication.rememberme.services.simplehash.main'] ?? $container->load('getSecurity_Authentication_Rememberme_Services_Simplehash_MainService')));

        return $instance;
    }
}
