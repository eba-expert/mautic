<?php

namespace ContainerMOMedhB;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getMautic_Campaign_Executioner_ScheduledService extends AppKernelProdContainer
{
    /*
     * Gets the public 'mautic.campaign.executioner.scheduled' shared service.
     *
     * @return \Mautic\CampaignBundle\Executioner\ScheduledExecutioner
     */
    public static function do($container, $lazyLoad = true)
    {
        $a = ($container->services['mautic.campaign.event_executioner'] ?? $container->load('getMautic_Campaign_EventExecutionerService'));

        if (isset($container->services['mautic.campaign.executioner.scheduled'])) {
            return $container->services['mautic.campaign.executioner.scheduled'];
        }
        $b = ($container->services['mautic.campaign.scheduler'] ?? $container->load('getMautic_Campaign_SchedulerService'));

        if (isset($container->services['mautic.campaign.executioner.scheduled'])) {
            return $container->services['mautic.campaign.executioner.scheduled'];
        }

        return $container->services['mautic.campaign.executioner.scheduled'] = new \Mautic\CampaignBundle\Executioner\ScheduledExecutioner(($container->services['mautic.campaign.repository.lead_event_log'] ?? $container->getMautic_Campaign_Repository_LeadEventLogService()), ($container->services['monolog.logger.mautic'] ?? $container->getMonolog_Logger_MauticService()), ($container->services['translator'] ?? $container->getTranslator2Service()), $a, $b, ($container->services['mautic.campaign.contact_finder.scheduled'] ?? $container->load('getMautic_Campaign_ContactFinder_ScheduledService')));
    }
}
