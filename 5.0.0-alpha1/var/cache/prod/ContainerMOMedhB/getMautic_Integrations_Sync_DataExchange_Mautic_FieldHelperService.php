<?php

namespace ContainerMOMedhB;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getMautic_Integrations_Sync_DataExchange_Mautic_FieldHelperService extends AppKernelProdContainer
{
    /*
     * Gets the public 'mautic.integrations.sync.data_exchange.mautic.field_helper' shared service.
     *
     * @return \Mautic\IntegrationsBundle\Sync\SyncDataExchange\Helper\FieldHelper
     */
    public static function do($container, $lazyLoad = true)
    {
        $a = ($container->services['mautic.lead.model.field'] ?? $container->getMautic_Lead_Model_FieldService());

        if (isset($container->services['mautic.integrations.sync.data_exchange.mautic.field_helper'])) {
            return $container->services['mautic.integrations.sync.data_exchange.mautic.field_helper'];
        }
        $b = ($container->services['mautic.channel.helper.channel_list'] ?? $container->getMautic_Channel_Helper_ChannelListService());

        if (isset($container->services['mautic.integrations.sync.data_exchange.mautic.field_helper'])) {
            return $container->services['mautic.integrations.sync.data_exchange.mautic.field_helper'];
        }
        $c = ($container->services['event_dispatcher'] ?? $container->getEventDispatcherService());

        if (isset($container->services['mautic.integrations.sync.data_exchange.mautic.field_helper'])) {
            return $container->services['mautic.integrations.sync.data_exchange.mautic.field_helper'];
        }
        $d = ($container->services['mautic.integrations.internal.object_provider'] ?? $container->load('getMautic_Integrations_Internal_ObjectProviderService'));

        if (isset($container->services['mautic.integrations.sync.data_exchange.mautic.field_helper'])) {
            return $container->services['mautic.integrations.sync.data_exchange.mautic.field_helper'];
        }

        return $container->services['mautic.integrations.sync.data_exchange.mautic.field_helper'] = new \Mautic\IntegrationsBundle\Sync\SyncDataExchange\Helper\FieldHelper($a, ($container->services['mautic.integrations.helper.variable_expresser'] ?? ($container->services['mautic.integrations.helper.variable_expresser'] = new \Mautic\IntegrationsBundle\Sync\VariableExpresser\VariableExpresserHelper())), $b, ($container->services['translator'] ?? $container->getTranslator2Service()), $c, $d);
    }
}
