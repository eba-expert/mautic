<?php

namespace ContainerMOMedhB;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getBuildJsSubscriber3Service extends AppKernelProdContainer
{
    /*
     * Gets the public 'Mautic\NotificationBundle\EventListener\BuildJsSubscriber' shared autowired service.
     *
     * @return \Mautic\NotificationBundle\EventListener\BuildJsSubscriber
     */
    public static function do($container, $lazyLoad = true)
    {
        $a = ($container->services['mautic.helper.notification'] ?? $container->load('getMautic_Helper_NotificationService'));

        if (isset($container->services['Mautic\\NotificationBundle\\EventListener\\BuildJsSubscriber'])) {
            return $container->services['Mautic\\NotificationBundle\\EventListener\\BuildJsSubscriber'];
        }
        $b = ($container->services['mautic.helper.integration'] ?? $container->getMautic_Helper_IntegrationService());

        if (isset($container->services['Mautic\\NotificationBundle\\EventListener\\BuildJsSubscriber'])) {
            return $container->services['Mautic\\NotificationBundle\\EventListener\\BuildJsSubscriber'];
        }
        $c = ($container->services['router'] ?? $container->getRouterService());

        if (isset($container->services['Mautic\\NotificationBundle\\EventListener\\BuildJsSubscriber'])) {
            return $container->services['Mautic\\NotificationBundle\\EventListener\\BuildJsSubscriber'];
        }

        return $container->services['Mautic\\NotificationBundle\\EventListener\\BuildJsSubscriber'] = new \Mautic\NotificationBundle\EventListener\BuildJsSubscriber($a, $b, $c);
    }
}
