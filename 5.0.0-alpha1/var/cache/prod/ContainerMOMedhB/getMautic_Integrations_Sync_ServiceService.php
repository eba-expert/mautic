<?php

namespace ContainerMOMedhB;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getMautic_Integrations_Sync_ServiceService extends AppKernelProdContainer
{
    /*
     * Gets the public 'mautic.integrations.sync.service' shared service.
     *
     * @return \Mautic\IntegrationsBundle\Sync\SyncService\SyncService
     */
    public static function do($container, $lazyLoad = true)
    {
        $container->services['mautic.integrations.sync.service'] = $instance = new \Mautic\IntegrationsBundle\Sync\SyncService\SyncService(($container->services['mautic.integrations.sync.data_exchange.mautic'] ?? $container->load('getMautic_Integrations_Sync_DataExchange_MauticService')), ($container->services['mautic.integrations.helper.sync_date'] ?? $container->load('getMautic_Integrations_Helper_SyncDateService')), ($container->services['mautic.integrations.helper.sync_mapping'] ?? $container->load('getMautic_Integrations_Helper_SyncMappingService')), ($container->services['mautic.integrations.sync.helper.relations'] ?? $container->load('getMautic_Integrations_Sync_Helper_RelationsService')), ($container->services['mautic.integrations.helper.sync_integrations'] ?? $container->load('getMautic_Integrations_Helper_SyncIntegrationsService')), ($container->services['event_dispatcher'] ?? $container->getEventDispatcherService()), ($container->services['mautic.integrations.sync.notifier'] ?? $container->load('getMautic_Integrations_Sync_NotifierService')), ($container->services['mautic.integrations.sync.integration_process'] ?? $container->load('getMautic_Integrations_Sync_IntegrationProcessService')), ($container->services['mautic.integrations.sync.internal_process'] ?? $container->load('getMautic_Integrations_Sync_InternalProcessService')));

        $instance->initiateDebugLogger(($container->services['mautic.sync.logger'] ?? $container->load('getMautic_Sync_LoggerService')));

        return $instance;
    }
}
