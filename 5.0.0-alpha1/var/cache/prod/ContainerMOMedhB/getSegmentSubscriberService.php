<?php

namespace ContainerMOMedhB;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSegmentSubscriberService extends AppKernelProdContainer
{
    /*
     * Gets the public 'Mautic\LeadBundle\EventListener\SegmentSubscriber' shared autowired service.
     *
     * @return \Mautic\LeadBundle\EventListener\SegmentSubscriber
     */
    public static function do($container, $lazyLoad = true)
    {
        $a = ($container->services['mautic.core.model.auditlog'] ?? $container->getMautic_Core_Model_AuditlogService());

        if (isset($container->services['Mautic\\LeadBundle\\EventListener\\SegmentSubscriber'])) {
            return $container->services['Mautic\\LeadBundle\\EventListener\\SegmentSubscriber'];
        }
        $b = ($container->services['mautic.lead.model.list'] ?? $container->getMautic_Lead_Model_ListService());

        if (isset($container->services['Mautic\\LeadBundle\\EventListener\\SegmentSubscriber'])) {
            return $container->services['Mautic\\LeadBundle\\EventListener\\SegmentSubscriber'];
        }

        return $container->services['Mautic\\LeadBundle\\EventListener\\SegmentSubscriber'] = new \Mautic\LeadBundle\EventListener\SegmentSubscriber(($container->services['mautic.helper.ip_lookup'] ?? $container->getMautic_Helper_IpLookupService()), $a, $b, ($container->services['translator'] ?? $container->getTranslator2Service()));
    }
}
