<?php

namespace ContainerTJJPQO2;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getContactExportSchedulerModelService extends AppKernelProdContainer
{
    /*
     * Gets the public 'Mautic\LeadBundle\Model\ContactExportSchedulerModel' shared autowired service.
     *
     * @return \Mautic\LeadBundle\Model\ContactExportSchedulerModel
     */
    public static function do($container, $lazyLoad = true)
    {
        $a = ($container->services['Mautic\\LeadBundle\\Model\\LeadModel'] ?? $container->getLeadModelService());

        if (isset($container->services['Mautic\\LeadBundle\\Model\\ContactExportSchedulerModel'])) {
            return $container->services['Mautic\\LeadBundle\\Model\\ContactExportSchedulerModel'];
        }
        $b = ($container->services['mautic.helper.mailer'] ?? $container->getMautic_Helper_MailerService());

        if (isset($container->services['Mautic\\LeadBundle\\Model\\ContactExportSchedulerModel'])) {
            return $container->services['Mautic\\LeadBundle\\Model\\ContactExportSchedulerModel'];
        }
        $c = ($container->services['event_dispatcher'] ?? $container->getEventDispatcherService());

        if (isset($container->services['Mautic\\LeadBundle\\Model\\ContactExportSchedulerModel'])) {
            return $container->services['Mautic\\LeadBundle\\Model\\ContactExportSchedulerModel'];
        }
        $d = ($container->services['router'] ?? $container->getRouterService());

        if (isset($container->services['Mautic\\LeadBundle\\Model\\ContactExportSchedulerModel'])) {
            return $container->services['Mautic\\LeadBundle\\Model\\ContactExportSchedulerModel'];
        }

        return $container->services['Mautic\\LeadBundle\\Model\\ContactExportSchedulerModel'] = new \Mautic\LeadBundle\Model\ContactExportSchedulerModel(($container->services['.container.private.session'] ?? $container->get_Container_Private_SessionService()), ($container->services['request_stack'] ?? ($container->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), $a, ($container->services['mautic.helper.export'] ?? $container->load('getMautic_Helper_ExportService')), $b, ($container->services['mautic.permission.manager'] ?? $container->getMautic_Permission_ManagerService()), ($container->services['mautic.security'] ?? $container->getMautic_SecurityService()), $c, $d, ($container->services['Mautic\\CoreBundle\\Translation\\Translator'] ?? $container->getTranslatorService()), ($container->services['mautic.helper.user'] ?? $container->getMautic_Helper_UserService()), ($container->services['monolog.logger.mautic'] ?? $container->getMonolog_Logger_MauticService()), ($container->services['mautic.helper.core_parameters'] ?? ($container->services['mautic.helper.core_parameters'] = new \Mautic\CoreBundle\Helper\CoreParametersHelper($container))));
    }
}
